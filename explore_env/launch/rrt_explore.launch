<!-- Launch file for the rrt-detector and the assigner -->
<launch>
<arg name="eta" value="1.0"/>
<arg name="Geta" value="15.0"/>
<param name="namespace_init_count" value="1"/>

  <!-- Global Detector -->
  <node pkg="rrt_exploration" type="global_rrt_detector" name="global_detector" output="screen">
  <param name="eta" value="$(arg Geta)"/>
  <param name="map_topic" value="/map"/>
  </node>
  
  <!-- Local Detector -->
  <node pkg="rrt_exploration" type="local_rrt_detector" name="local_detector" output="screen">
  <param name="eta" value="$(arg eta)"/>
  <param name="map_topic" value="/map"/>
  <param name="robot_frame" value="base_link"/>
  </node>
 
  <!-- Filters centroids and clears old frontier nodes -->
  <node pkg="rrt_exploration" type="filter.py" name="filter" output="screen">
  <param name="map_topic" value="/map"/>
  <param name="info_radius" value="1"/> 
  <param name="costmap_clearing_threshold" value="70"/> 
  <param name="goals_topic" value="/detected_points"/>
  <param name="namespace" value=""/> 
  <param name="n_robots" value="1"/>
  <param name="rate" value="100"/>
  </node>

  <!-- Finds out nodes with optimum gain values -->
  <node pkg="rrt_exploration" type="test_assigner.py" name="assigner" output="screen"/>

  <!-- Publishes to goal using client -->
  <node pkg="rrt_exploration" type="robot_goal_pub.py" name="goal_assigner" output="screen"/>

</launch>